How did viewing a diff between two versions of a file help you see the bug that
was introduced?

   It highlighted only the poritons that were different and so I could focus on the diff
   rather than go through lines and lines of code.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

You don't have to remember when you made which change and in what order.
All changes are timestamped.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Don't end up with unnecessary versions. Can logically decide when to commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Easier to see all changes that are linked together. Also can immediately know which 
files are related in some fashion by looking at the Commits.

How can you use the commands git log and git diff to view the history of files?

   git log will show the commits. git log ---stat will show the files involved in the commit
   Then the git diff will allow to show the diff between two commits

How might using version control make you more confident to make changes that
could break something?

You know you can always roll back . You have a backup.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
